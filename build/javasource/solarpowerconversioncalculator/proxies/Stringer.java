// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package solarpowerconversioncalculator.proxies;

public class Stringer extends solarpowerconversioncalculator.proxies.Element
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SolarPowerConversionCalculator.Stringer";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		ElementType("ElementType"),
		Code("Code"),
		Specification("Specification"),
		Producer("Producer"),
		IsChosen("IsChosen"),
		Notes("Notes"),
		Cost("Cost"),
		Coefficient("Coefficient");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Stringer(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SolarPowerConversionCalculator.Stringer"));
	}

	protected Stringer(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject stringerMendixObject)
	{
		super(context, stringerMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("SolarPowerConversionCalculator.Stringer", stringerMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SolarPowerConversionCalculator.Stringer");
	}

	/**
	 * @deprecated Use 'Stringer.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static solarpowerconversioncalculator.proxies.Stringer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return solarpowerconversioncalculator.proxies.Stringer.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static solarpowerconversioncalculator.proxies.Stringer initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new solarpowerconversioncalculator.proxies.Stringer(context, mendixObject);
	}

	public static solarpowerconversioncalculator.proxies.Stringer load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return solarpowerconversioncalculator.proxies.Stringer.initialize(context, mendixObject);
	}

	public static java.util.List<solarpowerconversioncalculator.proxies.Stringer> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<solarpowerconversioncalculator.proxies.Stringer> result = new java.util.ArrayList<solarpowerconversioncalculator.proxies.Stringer>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SolarPowerConversionCalculator.Stringer" + xpathConstraint))
			result.add(solarpowerconversioncalculator.proxies.Stringer.initialize(context, obj));
		return result;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final solarpowerconversioncalculator.proxies.Stringer that = (solarpowerconversioncalculator.proxies.Stringer) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SolarPowerConversionCalculator.Stringer";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
