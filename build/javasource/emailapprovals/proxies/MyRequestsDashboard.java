// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package emailapprovals.proxies;

/**
 * This entity provides data for teh dashboard in MyRequest page
 */
public class MyRequestsDashboard
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject myRequestsDashboardMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EmailApprovals.MyRequestsDashboard";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		AwaitingApproval("AwaitingApproval"),
		InProgress("InProgress"),
		Completed("Completed"),
		Rejected("Rejected");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public MyRequestsDashboard(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EmailApprovals.MyRequestsDashboard"));
	}

	protected MyRequestsDashboard(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject myRequestsDashboardMendixObject)
	{
		if (myRequestsDashboardMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EmailApprovals.MyRequestsDashboard", myRequestsDashboardMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EmailApprovals.MyRequestsDashboard");

		this.myRequestsDashboardMendixObject = myRequestsDashboardMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'MyRequestsDashboard.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static emailapprovals.proxies.MyRequestsDashboard initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return emailapprovals.proxies.MyRequestsDashboard.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static emailapprovals.proxies.MyRequestsDashboard initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new emailapprovals.proxies.MyRequestsDashboard(context, mendixObject);
	}

	public static emailapprovals.proxies.MyRequestsDashboard load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return emailapprovals.proxies.MyRequestsDashboard.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of AwaitingApproval
	 */
	public final java.lang.Integer getAwaitingApproval()
	{
		return getAwaitingApproval(getContext());
	}

	/**
	 * @param context
	 * @return value of AwaitingApproval
	 */
	public final java.lang.Integer getAwaitingApproval(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.AwaitingApproval.toString());
	}

	/**
	 * Set value of AwaitingApproval
	 * @param awaitingapproval
	 */
	public final void setAwaitingApproval(java.lang.Integer awaitingapproval)
	{
		setAwaitingApproval(getContext(), awaitingapproval);
	}

	/**
	 * Set value of AwaitingApproval
	 * @param context
	 * @param awaitingapproval
	 */
	public final void setAwaitingApproval(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer awaitingapproval)
	{
		getMendixObject().setValue(context, MemberNames.AwaitingApproval.toString(), awaitingapproval);
	}

	/**
	 * @return value of InProgress
	 */
	public final java.lang.Integer getInProgress()
	{
		return getInProgress(getContext());
	}

	/**
	 * @param context
	 * @return value of InProgress
	 */
	public final java.lang.Integer getInProgress(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.InProgress.toString());
	}

	/**
	 * Set value of InProgress
	 * @param inprogress
	 */
	public final void setInProgress(java.lang.Integer inprogress)
	{
		setInProgress(getContext(), inprogress);
	}

	/**
	 * Set value of InProgress
	 * @param context
	 * @param inprogress
	 */
	public final void setInProgress(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer inprogress)
	{
		getMendixObject().setValue(context, MemberNames.InProgress.toString(), inprogress);
	}

	/**
	 * @return value of Completed
	 */
	public final java.lang.Integer getCompleted()
	{
		return getCompleted(getContext());
	}

	/**
	 * @param context
	 * @return value of Completed
	 */
	public final java.lang.Integer getCompleted(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Completed.toString());
	}

	/**
	 * Set value of Completed
	 * @param completed
	 */
	public final void setCompleted(java.lang.Integer completed)
	{
		setCompleted(getContext(), completed);
	}

	/**
	 * Set value of Completed
	 * @param context
	 * @param completed
	 */
	public final void setCompleted(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer completed)
	{
		getMendixObject().setValue(context, MemberNames.Completed.toString(), completed);
	}

	/**
	 * @return value of Rejected
	 */
	public final java.lang.Integer getRejected()
	{
		return getRejected(getContext());
	}

	/**
	 * @param context
	 * @return value of Rejected
	 */
	public final java.lang.Integer getRejected(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Rejected.toString());
	}

	/**
	 * Set value of Rejected
	 * @param rejected
	 */
	public final void setRejected(java.lang.Integer rejected)
	{
		setRejected(getContext(), rejected);
	}

	/**
	 * Set value of Rejected
	 * @param context
	 * @param rejected
	 */
	public final void setRejected(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer rejected)
	{
		getMendixObject().setValue(context, MemberNames.Rejected.toString(), rejected);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return myRequestsDashboardMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final emailapprovals.proxies.MyRequestsDashboard that = (emailapprovals.proxies.MyRequestsDashboard) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EmailApprovals.MyRequestsDashboard";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
